\import Homotopy.Pushout
\import Meta
\import Paths
\import Paths.Meta
\import Relation.Equivalence

\class VanKampen \noclassifying (A B C : \Type) (f : A -> B) (g : A -> C) {
  -- Example: (x1 : A), (q1 : g(x1) = g(y1)), (y1 : A), (p1 : f(y1) = f(x2)), (x2 : A), (q2 : g(x2) = g(y2)), (y2 : A)

  \data Points
    | two A A
    | cons A A Points

  \func first (xs : Points) : A
    | two x y => x
    | cons x y xs => x

  \func last (xs : Points) : A
    | two x y => y
    | cons x y xs => last xs

  \data Segments {L R : \Type} (xs : Points) (toL : A -> L) (toR : A -> R) \elim xs
    | two x y => one-seg (toR x = toR y)
    | cons x y xs => cons-seg (toR x = toR y) (toL y = toL (first xs)) (Segments xs toL toR)

--  \func head-seg {L R : \Type} {toL : A -> L} {toR : A -> R} {xs : Points} (seg : Segments xs toL toR)
--    : \Sigma (x y : A) (toR x = toR y) \elim xs, seg
--    | two x y, one-seg q => (x, y, q)
--    | cons x y xs, cons-seg q p seg => (x, y, q)

  \data Seq {L R : \Type} (toL : A -> L) (toR : A -> R)
    | single (l l' : L) (l = l')
    | segments (l : L) (xs : Points) (l' : L) (l = toL (first xs)) (Segments xs toL toR) (toL (last xs) = l')

  \data \infixl 6 ~> {L R : \Type} {toL : A -> L} {toR : A -> R}
                     {xs : Points} (s : Segments xs toL toR) {xs' : Points} (s' : Segments xs' toL toR)
  \elim xs, s, xs', s' {
    | cons x1 y1 (two x2 y2), cons-seg q1 p1 (one-seg q2), two x2' y2', (one-seg q2') =>
    p-idp-one-seg
      (y1=x2 : y1 = x2) (p1 with y1=x2 = idp)
      (x1=x2' : x1 = x2') (y2=y2' : y2 = y2') (q1 with y1=x2 *> q2 = q2' with x1=x2' with y2=y2')
    | cons x1 y1 (cons x2 y2 xs), cons-seg q1 p1 (cons-seg q2 p2 s), cons x2' y2' xs', cons-seg q2' p2' s' =>
    p-idp-cons-seg
      (y1=x2 : y1 = x2) (p1 with y1=x2 = idp)
      (x1=x2' : x1 = x2') (y2=y2' : y2 = y2') (q1 with y1=x2 *> q2 = q2' with x1=x2' with y2=y2')
      (xs=xs' : xs = xs') (p2 = p2' with y2=y2' with xs=xs') (s = s' with xs=xs')
    | cons x1 y1 (cons x2 y2 xs), cons-seg q1 p1 (cons-seg q2 p2 s), cons x2' y2' xs', cons-seg q2' p2' s' =>
    q-idp
      -- TODO
  }

  \meta \infixl 10 with x p => rewriteF p x <|> rewriteF (inv p) x

  --  \data \infixl 6 ~> {L R : \Type} {toL : A -> L} {toR : A -> R} (s1 s2 : Seq toL toR) \with {
  --    | segments l x1 yn l' p0 (cons y1 x2 q1 p1 (cons y2 x3 q2 p2 seg)) pn, s2 => Foo
  --  }

  \func code (p1 p2 : PushoutData f g) : \Set
    | pinl b, pinl b' => Quotient {Seq f g} (~>)
    | pinr c, pinr c' => {?}
    | pinl b, pinr c => {?}
    | pinr c, pinl b => {?}
    | pglue a i, pinl b => {?}
    | pglue a i, pinr c => {?}
    | pinl b, pglue a i => {?}
    | pinr c, pglue a i => {?}
    | pglue a i, pglue a1 i1 => {?}
}